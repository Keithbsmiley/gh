#!/usr/bin/env python

import signal
import sys
from argparse import ArgumentParser
from requests import get


URL = "https://api.github.com/repos/%s/releases"


def signal_handle(sig, frame):
    sys.exit(0)


def extension(t):
    if t == "zip":
        return t
    elif t == "x-gzip":
        return "tar.gz"

    print("Unknown extension '%s'" % t)
    sys.exit(1)


def print_filename(filename, only_filename):
    if only_filename:
        print(filename)
    else:
        print("Release saved to %s" % filename)


def main(repo):
    r = get(URL % repo)
    json = r.json()
    if len(json) < 1:
        print("No releases for %s" % repo)
        sys.exit(1)

    newest = json[0]
    assets = newest["assets"]
    first_asset = assets[0]
    asset_url = first_asset["url"]
    content_type = first_asset["content_type"].split('/')[-1]
    headers = {"Accept": "application/octet-stream"}
    r = get(asset_url, headers=headers, stream=True)
    filename = "release.%s" % extension(content_type)
    with open(filename, "wb") as f:
        for chunk in r.iter_content(1024):
            f.write(chunk)
            f.flush()

    return filename


signal.signal(signal.SIGINT, signal_handle)
if __name__ == '__main__':
    parser = ArgumentParser(description="Download the most recent release of a repo")
    parser.add_argument("-r", "--repo", help="the user/repo", required=True)
    parser.add_argument("-f", "--filename", action="store_true",
                        help="only print the filename",
                        default=False)
    ns = parser.parse_args()
    filename = main(ns.repo)
    print_filename(filename, ns.filename)
