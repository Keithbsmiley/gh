#compdef ghb

_ghb() {
  if (( CURRENT > 2 )); then
    (( CURRENT-- ))
    shift words
    _call_function - _ghb_${words[1]}
    return
  else
    local -a _ghb_subcommands
    _ghb_subcommands=(
      'contributions:show the number of your contributions todays'
      'create:create a new repo'
      'download-release:download the newest release for a given repository'
      'notifications:open all your unread notifications'
      'pr:open a pull request from the current branch'
      'unwatch:prompt to unwatch repos'
      'watch:watch a repo'
    )
    _describe -t commands 'ghb subcommands' _ghb_subcommands && ret=0
  fi
}

_ghb_create() {
  _arguments -C \
    {-n,--name}'[the name of the repo]' \
    {-d,--description}'[the repo description]' \
    {-u,--url}'[the external url]' \
    {-p,--private}'[should the repo be private]' \
    {-w,--wiki}'[should wikis be enabled]' \
    {-h,--help}'[print the help menu]' \
    '--no-issues[disable issues]' \
    '--no-downloads[disable downloads]' \
    && ret=0
}

_ghb_download-release() {
  _arguments -C \
    {-f,--filename}'[only print the filename that is created]' \
    {-h,--help}'[print the help menu]' \
    && ret=0
}

_ghb_unwatch() {
  _arguments -C \
    {-u,--users}'[comma seperated list of valid users]' \
    {-i,--ignored}'[comma seperated list of ignored repos]' \
    {-h,--help}'[print the help menu]' \
    && ret=0
}

_ghb

# vim:ft=zsh:ts=2
