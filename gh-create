#!/usr/bin/env python

import netrc
import signal
import sys
from json import dumps
from optparse import OptionParser
from requests import post
from webbrowser import open_new_tab


URL = "https://api.github.com/user/repos"
NETRC_MACHINE = "api.github.com"


def signal_handle(sig, frame):
    sys.exit(0)


def credentials():
    n = netrc.netrc()
    auth = n.authenticators(NETRC_MACHINE)
    if auth is None:
        sys.exit("Add %s to your ~/.netrc" % NETRC_MACHINE)

    user = auth[0] or auth[1]
    password = auth[2]

    if user is None or password is None:
        sys.exit("Invalid netrc entry for %s" % NETRC_MACHINE)

    return user, password


def main(options):
    username, password = credentials()
    headers = {'Accept': 'application/vnd.github.v3+json'}
    payload = dumps(options)
    r = post(URL,
             auth=(username, password),
             headers=headers,
             data=payload)
    json = r.json()
    if r.status_code == 201:
        print("Success")
        open_new_tab(json["html_url"])
    else:
        print("Error")
        print(dumps(json, indent=2))


signal.signal(signal.SIGINT, signal_handle)
if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option("-n", "--name", type="string", help="the name of the repo")
    parser.add_option("-d", "--description", type="string", help="the description of the repo")
    parser.add_option("-u", "--url", type="string", help="the homepage for the repo", dest="homepage")
    parser.add_option("-p", "--private", action="store_true", help="make the repo private", default=False)
    parser.add_option("-w", "--wiki", action="store_true", help="enable wikis", default=False, dest="has_wiki")
    parser.add_option("--no-issues", action="store_false", help="disable issues", default=True, dest="has_issues")
    parser.add_option("--no-downloads", action="store_false", help="disable downloads", default=True, dest="has_downloads")
    opts, args = parser.parse_args()
    if len(args) > 0 or opts.name is None:
        parser.print_help()
        sys.exit(1)

    main(vars(opts))
