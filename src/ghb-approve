#!/usr/bin/env python
#
# Clear comments on a pull request
# Usage: ghb clear-comments USER/REPO PR_NUMBER
#

from helpers import credentials
import argparse
import json
import re
import requests
import signal
import sys

NETRC_MACHINE = "api.github.com"
REGEX = re.compile(r"(https?://github.com/)?(.*/.*)/pull/(\d+)/?(commits|files)?")
URL = "https://api.github.com/repos/%s/pulls/%s/reviews"


def signal_handle(sig, frame):
    sys.exit(0)


def extract_info(pr):
    match = REGEX.match(pr)
    if not match:
        print("Failed to match '{}'".format(pr))
        sys.exit(1)

    repo, number = match.group(2), match.group(3)
    if not repo or not number:
        print("Failed to extract repo info from '{}'".format(pr))
        sys.exit(1)

    return repo, number


def main(pr):
    repo, number = extract_info(pr)
    user, password = credentials.credentials(NETRC_MACHINE)
    params = {"event": "APPROVE"}
    headers = {"Accept": "application/vnd.github.black-cat-preview+json"}
    response = requests.post(URL % (repo, number), auth=(user, password),
                             data=json.dumps(params), headers=headers)
    if response.status_code != 200:
        print(json.dumps(response.json(), indent=4, sort_keys=True))
        sys.exit(1)

signal.signal(signal.SIGINT, signal_handle)
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Approve and +1 a PR")
    parser.add_argument("pr", help="the PR to clear")
    arguments = parser.parse_args()
    main(arguments.pr)
